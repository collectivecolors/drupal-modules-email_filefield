<?php 
// $Id$

/**
 * @file
 * 
 * Email FileField [  email_filefield  ]
 * 
 * Defines a CCK file field formatter that allows for the 
 * emailing of files attached to content.
 * 
 * @todo Make this module work for multiple files.  Right now only a single 
 * file is supported.
 * 
 * @todo Eliminate the dependency on the thickbox module.  The thickbox module
 * can be themed out of the picture but it would be best if the module did not
 * need it installed to operate.
 */

//------------------------------------------------------------------------------
// Drupal hooks
//------------------------------------------------------------------------------

/**
 * Implementation of hook_theme().
 * 
 * @see http://api.drupal.org/api/function/hook_theme/6
 */
function email_filefield_theme() {
  return array(
    'email_filefield_formatter_email_form' => array(
      'arguments' => array('element' => NULL),
    ),
    'email_filefield_display' => array(
      'arguments' => array('file' => NULL, 'field' => NULL),
    ),
    'email_filefield_email_link' => array(
      'arguments' => array('file' => NULL, 'field' => NULL),
    ),
    'email_filefield_email_form' => array(
      'arguments' => array('file' => NULL, 'form_content' => NULL),
    ),
  );
}

/**
 * Implementation of hook_form_alter().
 *
 * @see http://api.drupal.org/api/function/hook_form_alter/6
 */
/*function email_filefield_form_alter(&$form, $form_state, $form_id) {
	
	// We only care about webform submissions.
	if (strpos($form_id, 'webform_client_form_') === 0) {
		$webform = node_load($form['details']['nid']['#value']);
		
	}	
}*/

//------------------------------------------------------------------------------
// CCK hooks
//------------------------------------------------------------------------------

/**
 * Implementation of hook_field_formatter_info().
 */
function email_filefield_field_formatter_info() {
  return array(
    'email_form' => array(
      'label' => t('Link with popup email form'),
      'field types' => array('filefield'),
      'multiple values' => CONTENT_HANDLE_CORE,
      'description' => t(
        'Displays a link that, when clicked, pops up a email this file form on'
        . ' the page via thickbox.'
      ),  
    ),  
  );
}

//------------------------------------------------------------------------------
// Theme functions
//------------------------------------------------------------------------------

/**
 * Theme function for the 'email_form' filefield formatter.
 */
function theme_email_filefield_formatter_email_form($element) {
  
	$file  = $element['#item'];
  $field = content_fields($element['#field_name']);

  // We need to make sure the filefield formatter library is loaded to use
  // the functions filefield_file_listed().
  module_load_include('inc', 'filefield', 'filefield_formatter');
  
  // Make sure user has permission to view this file.
  if (filefield_view_access($field['field_name']) 
      && filefield_file_listed($file, $field)) {
      
    return theme('email_filefield_display', $file, $field);
  }
  return ''; // These users can't see anything. 
}

//------------------------------------------------------------------------------

/**
 * Theme function that returns the email link and form.
 */
function theme_email_filefield_display($file, $field) {
	
	// Get form being used to get information.
	// TODO: Integrate with webforms, so you can have modifiable forms.
	//       ** Requires configurable height and width settings on popup **
	$form_input = email_filefield_get_email_form($file, $field);
	
	// Format information for display.
	$download_link = theme('filefield_file', $file);
	
	// Theme 'email this file' link.
	$email_link = theme('email_filefield_email_link', $file, $field);
	
	// Theme 'email form' that is handled by the thickbox display.
	$email_form = theme('email_filefield_email_form', $file, $form_input);
	
	// Email form should be hidden initially. 
	return $download_link . $email_link . $email_form;
}

//------------------------------------------------------------------------------

function theme_email_filefield_email_link($file, $field) {
	
	// krumo($file);
	// krumo($field);
	
	$fid    = $file['fid'];
	
	$width  = 300; // TODO: Make this a variable_get(...) configuration.
	$height = 350; // TODO: Make this a variable_get(...) configuration.
	
	$output = "<div id='email-link-$fid-cont'> ( "
	 . "<a href='#TB_inline?width=$width&height=$height&inlineId=email-form-$fid'"
	 . " class='email-link thickbox'>" 
	 . t('Email this file')
	 . "</a>"
	 . " ) </div>";
	         
	// krumo($output);
	         
	return $output;
}

//------------------------------------------------------------------------------

function theme_email_filefield_email_form($file, $form_input) {
  
	$fid = $file['fid'];
	
	$output = "<div id='email-form-$fid' class='email-form'"
	 . " style='display: none'>"
	 . $form_input
	 . "</div>";  
  
  return $output;
}

//------------------------------------------------------------------------------
// Form functions
//------------------------------------------------------------------------------

/**
 * Return the HTMLified send mail form ready for theme injection.
 */
function email_filefield_get_email_form($file, $field) {
	
	$webform_nid = 2; // TODO: Make this selectable in the field settings.
	$webform = node_load($webform_nid);
	
	$form = drupal_get_form('email_filefield_webform_form', $webform, $file);
  
  $output = theme('webform_view', $webform, FALSE, TRUE, $form, TRUE);
	
	return $output;
}

//------------------------------------------------------------------------------

/**
 * Return the actual send email form.
 * 
 * This is an altered webform.  Webform form handlers should still be applied.
 */
function email_filefield_webform_form($form_state, $webform, $file) {
	
	// Get the raw webform.
	$form = webform_client_form($form_state, $webform, array(), TRUE, FALSE);
	
	// Eliminate the typical webform redirection.
	unset($form['#action']);
	
	// Add our special values.
	$form['#filefield'] = $file;
	
	// Add our own submit handler.
	$form['#submit'][] = 'email_filefield_webform_form_submit';
	
	krumo($form);
	
	return $form;	
}

//------------------------------------------------------------------------------

/**
 * Submit handler for the send email form.
 */
function email_filefield_webform_form_submit($form, &$form_state) {
	
	$file = $form['#filefield'];
	
	krumo($file);
	
	// TODO: Send email to destination email with attached file and message.
	
}

//------------------------------------------------------------------------------
